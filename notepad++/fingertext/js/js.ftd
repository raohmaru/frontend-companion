try
Ext:js
try {
	$[![throw "myException";]!]
} catch (err) {
	$[![console.log(err);]!]
}$[![ finally {
	
}]!][>END<]!$[FingerTextData FingerTextData]@#
switch
Ext:js
switch ($[![expression]!]) {
	case $[![expression1]!]:
		$[0[]0]
		break;
	default:
		$[0[]0];
}[>END<]!$[FingerTextData FingerTextData]@#
module
Ext:js
const $[![moduleName]!] = (function() {
	function $[![method]!]() {
		$[0[]0]
	};
	return {
		$[![method]!]
	};
}());
[>END<]!$[FingerTextData FingerTextData]@#
log
Ext:js
console.log($[![(key)SELECTION]!]$[0[]0]);[>END<]!$[FingerTextData FingerTextData]@#
jsdoc
Ext:js
/**
 * $[![Description]!]
 * @$[![constructor]!]
 * @param {$[![type]!]} $[![var]!] - $[![param descr]!]
 */[>END<]!$[FingerTextData FingerTextData]@#
import
Ext:js
import $[![(opt)defaultExport|* as name|{ exportName }]!] from '$[![./path/to/file.js]!]';[>END<]!$[FingerTextData FingerTextData]@#
export
Ext:js
export $[![default ]!]$[![(opt)expression|{ exportName }|{ variable as exportName }]!];[>END<]!$[FingerTextData FingerTextData]@#
ifelse
Ext:js
if ($[![(key)SELECTION]!]$[![condition]!]) {
	$[![]!]
} else {
	$[![]!]
}[>END<]!$[FingerTextData FingerTextData]@#
if
Ext:js
if ($[![(key)SELECTION]!]$[![condition]!]) {
	$[0[]0]
}[>END<]!$[FingerTextData FingerTextData]@#
gid
Ext:js
document.getElementById("$[![id]!]")$[0[]0][>END<]!$[FingerTextData FingerTextData]@#
qs
Ext:js
document.querySelector("$[![selector]!]")$[0[]0][>END<]!$[FingerTextData FingerTextData]@#
qsa
Ext:js
document.querySelectorAll("$[![selector]!]")$[![.forEach((el) => {})]!][>END<]!$[FingerTextData FingerTextData]@#
fun
Ext:js
function $[![function_name]!]($[![param]!]) {
	$[0[]0]
}
[>END<]!$[FingerTextData FingerTextData]@#
forof
Ext:js
for(let $[![o]!] of $[![Things]!]) {
	$[0[]0]
}[>END<]!$[FingerTextData FingerTextData]@#
fori
Ext:js
for(let $[![prop]!] in $[![object]!]) {
	if (Object.prototype.hasOwnProperty($[![object]!], $[![prop]!])) {
		$[![object]!][$[![prop]!]]$[0[]0]
	}
}[>END<]!$[FingerTextData FingerTextData]@#
for
Ext:js
for(let $[![i]!]=0, len=$[![Things]!].length; $[![i]!] < len; $[![i]!]++) {
	$[![Things]!][$[![i]!]];$[0[]0]
}[>END<]!$[FingerTextData FingerTextData]@#
eprev
Ext:js
$[![e]!].preventDefault();[>END<]!$[FingerTextData FingerTextData]@#
console
Ext:js
console.$[![(opt)log|info|warn|error|assert|trace|table|count|countReset|group|groupCollapsed|groupEnd|profile|profileEnd|time|timeEnd|timeLog|timeStamp]!]($[![(key)SELECTION]!]$[0[]0]);[>END<]!$[FingerTextData FingerTextData]@#
class
Ext:js
$[![export default ]!]class $[![ClassName]!]$[![ extends OtherClassName]!] {
	constructor() {
		$[0[]0]
	}
	
	get property() {
		return this._property;
	}
	
	set property(value) {
		this._property = value;
	}
	
	$[![method]!]() {
		$[0[]0]
	}
}[>END<]!$[FingerTextData FingerTextData]@#
alert
Ext:js
window.alert('$[![Hello World!]!]');[>END<]!$[FingerTextData FingerTextData]@#
afun
Ext:js
function($[![]!]) {
	$[0[]0]
}[>END<]!$[FingerTextData FingerTextData]@#
farr
Ext:js
($[![]!]) => {
	$[0[]0]
}[>END<]!$[FingerTextData FingerTextData]@#
iife
Ext:js
;(function () {
	$[0[]0]
}());[>END<]!$[FingerTextData FingerTextData]@#
promise
Ext:js
new Promise((resolve, reject) => {
  $[0[]0]
});[>END<]!$[FingerTextData FingerTextData]@#
now
Ext:js
Date.now()[>END<]!$[FingerTextData FingerTextData]@#
setTimeout
Ext:js
setTimeout(() => {
	$[0[]0]
}, $[![ms]!]);[>END<]!$[FingerTextData FingerTextData]@#
okeys
Ext:js
Object.keys($[![obj]!]).forEach((key) => {
	$[0[]0]
});[>END<]!$[FingerTextData FingerTextData]@#
